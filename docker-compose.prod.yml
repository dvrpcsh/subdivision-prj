# ===================================================================
# 운영 서버(Production) 전용 Docker Compose 파일 (최종 수정)
# ===================================================================
services:
  app:
    image: DOCKER_IMAGE_PLACEHOLDER
    container_name: subdivision-app
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file:
      - ./.env

  db:
    image: mysql:8.0
    container_name: subdivision-db
    ports:
      - "3306:3306"
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    env_file:
      - ./.env
    volumes:
      - db-data:/var/lib/mysql
      # 💡 [핵심 수정] ./init.sql 파일을 컨테이너의 /docker-entrypoint-initdb.d/ 폴더로 복사합니다.
      # 이 폴더 안의 .sql 파일은 MySQL 컨테이너가 처음 생성될 때 자동으로 실행됩니다.
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    container_name: subdivision-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  db-data:
  redis-data:

