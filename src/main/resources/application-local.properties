# ===================================================================
# 로컬 개발 환경 (local profile) 설정
# ===================================================================

# === DATABASE (MySQL) 설정 ===
# 데이터베이스 종류를 MySQL로 변경했습니다.
spring.datasource.url=jdbc:mysql://localhost:3306/nottori_db?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=star15321!
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# === JPA(ORM) 설정 ===
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# JPA가 MySQL 방언(dialect)을 사용하도록 변경했습니다.
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# === JWT 설정 ===
jwt.secret=NottoriProjectSecretKeyForAuthenticationTokenGeneration
jwt.expiration-ms=3600000

# === 로깅 레벨 설정 ===
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

# === AWS S3 설정 ===
cloud.aws.s3.bucket=nottori-bucket-sanghyeop250818
cloud.aws.region.static=ap-northeast-2

# === 외부 민감 정보 파일 import ===
# 로컬 환경에서는 application-secret.properties 파일을 사용합니다.
spring.config.import=optional:application-secret.properties

# === Email (SMTP) 설정 ===
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=cocomin1268@gmail.com
spring.mail.password=${mail.password} # 이 값은 application-secret.properties에서 가져옵니다.
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# === Redis 설정 ===
spring.redis.host=localhost
spring.redis.port=6379

# === OAuth2 설정 ===
# 이 값들은 application-secret.properties에서 가져옵니다.
spring.security.oauth2.client.registration.google.client-id=${google.client.id}
spring.security.oauth2.client.registration.google.client-secret=${google.client.secret}
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.naver.client-id=${naver.client.id}
spring.security.oauth2.client.registration.naver.client-secret=${naver.client.secret}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

spring.security.oauth2.client.registration.kakao.client-id=${kakao.client.id}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
